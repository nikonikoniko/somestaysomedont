# This is a basic workflow to help you get started with Actions

name: deploy_elvirapara

# Controls when the workflow will run
on:
  repository_dispatch:
    types: deploy_elvirapara
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Prepare java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '8'
          
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@3.5
        with:
          cli: 1.10.1.693 # Clojure CLI based on tools.deps

      - name: Execute clojure code on Linux and MacOS
        run: clojure -M:build-elvirapara
        shell: bash
        
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with: 
          key: ${{ secrets.OPALSTACK_SSH_PRIVATE }}
          known_hosts: 'placeholder'
          
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.OPALSTACK_HOST }} >> ~/.ssh/known_hosts
        
      - name: copy file via ssh password
        run: scp -r sites/elvirapara/fake_dist/* github@${{ secrets.OPALSTACK_HOST }}:/home/github/apps/elvirapara
         
